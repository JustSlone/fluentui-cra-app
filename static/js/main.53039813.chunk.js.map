{"version":3,"sources":["logo.svg","index.styles.ts","App.styles.ts","App.tsx","reportWebVitals.ts","ThemeSwitcher.styles.ts","ThemeSwitcher.tsx","index.tsx"],"names":["makeStaticStyles","body","margin","fontFamily","code","App","useStaticStyles","classes","useAppStyles","className","src","mergeClasses","alt","as","href","target","rel","appearance","size","Link","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","makeStyles","menuButton","position","top","left","themes","webDarkTheme","teamsDarkTheme","webLightTheme","teamsLightTheme","webHighContrastTheme","teamsHighContrastTheme","ThemeSwitcher","props","useState","Object","keys","currentTheme","setCurrentTheme","useThemeSwitcherStyles","FluentProvider","theme","Menu","MenuTrigger","MenuButton","MenuPopover","MenuList","map","themeName","MenuItem","onClick","children","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"+JAAe,MAA0B,iC,4CCE1BA,cAAiB,CAC9BC,KAAM,CACJC,OAAQ,IACRC,WACE,oJACF,yBAA0B,cAC1B,0BAA2B,aAG7BC,KAAM,CACJD,WACE,wE,QCXN,qgK,QCmDA,EA9CaE,WACXC,IACA,IAAMC,EAAUC,IAMhB,OACE,qBAAKC,UAAWF,EAAhB,aACE,yBAAQE,UAAWF,EAAnB,oBACE,mBACEG,IADF,EAEED,UAAWE,YAAaJ,EAAD,QAAkBA,EAF3C,aAGEK,IAJJ,SAME,sCACO,+BADP,gBANF,0BASE,mBACEH,UAAWF,EADb,cAEEM,GAFF,IAGEC,KAHF,sBAIEC,OAJF,SAKEC,IALF,sBAMEC,WANF,UAOEC,KAPF,iBATF,gBAoBE,mBApBF,IAqBE,cAACC,EAAA,EAAD,CAEEV,UAAWF,EAFb,QAGEO,KAHF,oCAIEC,OAJF,SAKEC,IALF,+BArBF,kBA8BE,mBAhCN,UCDaI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mICPCQ,cAAW,CACxBC,WAAY,CACVC,SADU,SAEVC,IAFU,OAGVC,KAJJ,UCmBMC,EAAyB,CAC7B,WAAYC,IACZ,aAAcC,IACd,YAAaC,IACb,cAAeC,IACf,oBAAqBC,IACrB,sBAAuBC,KAGZC,EAA0B,SAACC,GAAW,IAAD,EACVC,mBAASC,OAAOC,KAAKX,GAAQ,IADnB,mBAC3CY,EAD2C,KAC7BC,EAD6B,KAE1CxC,EAAUyC,IAChB,OACE,eAACC,EAAA,EAAD,CAAgBC,MAAOhB,EAAOY,GAA9B,UACE,eAACK,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAY5C,UAAWF,EAAQuB,WAA/B,SAA4CgB,MAE9C,cAACQ,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACGX,OAAOC,KAAKX,GAAQsB,KAAI,SAACC,GAAD,OACvB,cAACC,EAAA,EAAD,CAAUC,QAAS,kBAAMZ,EAAgBU,IAAzC,SACGA,cAMVf,EAAMkB,aC3CbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1B7C,EAAgB8C,QAAQC,O","file":"static/js/main.53039813.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { makeStaticStyles } from \"@griffel/react\";\n\nexport default makeStaticStyles({\n  body: {\n    margin: \"0\",\n    fontFamily:\n      \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n    \"-webkit-font-smoothing\": \"antialiased\",\n    \"-moz-osx-font-smoothing\": \"grayscale\",\n  },\n\n  code: {\n    fontFamily:\n      \"source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace\",\n  },\n});\n","import { makeStyles } from \"@griffel/react\";\n\nexport default makeStyles({\n  app: {\n    textAlign: \"center\",\n  },\n  appLogo: {\n    height: \"40vmin\",\n    pointerEvents: \"none\",\n  },\n  appLogoSpin: {\n    \"@media (prefers-reduced-motion: no-preference)\": {\n      animationIterationCount: \"infinite\",\n      animationDuration: \"20s\",\n      animationTimingFunction: \"linear\",\n      animationName: {\n        from: {\n          transform: \"rotate(0deg)\",\n        },\n        to: {\n          transform: \"rotate(360deg)\",\n        },\n      },\n    },\n    \"@media screen and (prefers-reduced-motion: no-preference) and (max-width: 992px)\":\n      {\n        animationIterationCount: \"infinite\",\n        animationDuration: \"4s\",\n        animationTimingFunction: \"linear\",\n        animationName: {\n          from: {\n            transform: \"rotate(360deg)\",\n          },\n          to: {\n            transform: \"rotate(0deg)\",\n          },\n        },\n      },\n  },\n  appHeader: {\n    backgroundColor: \"var(--colorNeutralBackground1)\",\n    minHeight: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: \"calc(10px + 2vmin)\",\n    color: \"var(--colorNeutralForeground1)\",\n  },\n  appLinkButton: {\n    textDecorationLine: \"none\",\n  },\n  appLink: {\n    borderBottomColor: \"var(--colorNeutralForeground3)\",\n    color: \"var(--colorNeutralForeground3)\",\n    \":active\": {\n      borderBottomColor: \"var(--colorNeutralForeground2BrandPressed)\",\n      color: \"var(--colorNeutralForeground2BrandPressed)\",\n    },\n    \":hover\": {\n      borderBottomColor: \"var(--colorNeutralForeground2BrandHover)\",\n      color: \"var(--colorNeutralForeground2BrandHover)\",\n    },\n  },\n});\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport { Button, Image, Link } from \"@fluentui/react-components\";\nimport { mergeClasses } from \"@griffel/react\";\nimport useStaticStyles from \"./index.styles\";\nimport useAppStyles from \"./App.styles\";\n\nexport const App: React.FC = () => {\n  useStaticStyles();\n  const classes = useAppStyles();\n  //   const otherclasses = makeStyles({\n  //     redBox: { background: 'white', color: 'red' },\n  //     bluBox: { background: \"white\", color: 'blue' },\n  //  }\n  //  )();\n  return (\n    <div className={classes.app}>\n      <header className={classes.appHeader}>\n        <Image\n          src={logo}\n          className={mergeClasses(classes.appLogo, classes.appLogoSpin)}\n          alt=\"logo\"\n        />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <Button\n          className={classes.appLinkButton}\n          as=\"a\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          appearance=\"primary\"\n          size=\"large\"\n        >\n          Learn React\n        </Button>\n        <br />\n        <Link\n          // className={mergeClasses(classes.appLink, otherclasses.redBox, otherclasses.bluBox)}\n          className={classes.appLink}\n          href=\"https://aka.ms/fluentui-storybook\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Become Fluent\n        </Link>\n        <br />\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { makeStyles } from \"@fluentui/react-components\";\n\nexport default makeStyles({\n  menuButton: {\n    position: \"sticky\",\n    top: \"15px\",\n    left: \"15px\",\n  },\n});\n","import {\n  FluentProvider,\n  webLightTheme,\n  webDarkTheme,\n  teamsLightTheme,\n  teamsDarkTheme,\n  Theme,\n  teamsHighContrastTheme,\n  webHighContrastTheme,\n  Menu,\n  MenuTrigger,\n  MenuButton,\n  MenuPopover,\n  MenuList,\n  MenuItem,\n} from \"@fluentui/react-components\";\nimport { useState } from \"react\";\nimport useThemeSwitcherStyles from \"./ThemeSwitcher.styles\";\n\nexport type ThemeSelection = Record<string, Theme>;\n\nconst themes: ThemeSelection = {\n  \"Web Dark\": webDarkTheme,\n  \"Teams Dark\": teamsDarkTheme,\n  \"Web Light\": webLightTheme,\n  \"Teams Light\": teamsLightTheme,\n  \"Web High Contrast\": webHighContrastTheme,\n  \"Teams High Contrast\": teamsHighContrastTheme,\n};\n\nexport const ThemeSwitcher: React.FC = (props) => {\n  let [currentTheme, setCurrentTheme] = useState(Object.keys(themes)[0]);\n  const classes = useThemeSwitcherStyles();\n  return (\n    <FluentProvider theme={themes[currentTheme]}>\n      <Menu>\n        <MenuTrigger>\n          <MenuButton className={classes.menuButton}>{currentTheme}</MenuButton>\n        </MenuTrigger>\n        <MenuPopover>\n          <MenuList>\n            {Object.keys(themes).map((themeName) => (\n              <MenuItem onClick={() => setCurrentTheme(themeName)}>\n                {themeName}\n              </MenuItem>\n            ))}\n          </MenuList>\n        </MenuPopover>\n      </Menu>\n      {props.children}\n    </FluentProvider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeSwitcher } from \"./ThemeSwitcher\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeSwitcher>\n      <App />\n    </ThemeSwitcher>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}