{"version":3,"sources":["logo.svg","index.styles.ts","App.styles.ts","App.tsx","reportWebVitals.ts","ThemeSwitcher.styles.ts","ThemeSwitcher.tsx","index.tsx"],"names":["makeStaticStyles","body","margin","fontFamily","code","App","useStaticStyles","classes","useAppStyles","className","app","appHeader","Image","src","logo","mergeClasses","appLogo","appLogoSpin","alt","Button","appLinkButton","as","href","target","rel","appearance","size","Link","appLink","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","themes","webDarkTheme","teamsDarkTheme","webLightTheme","teamsLightTheme","webHighContrastTheme","teamsHighContrastTheme","ThemeSwitcher","props","useState","Object","keys","currentTheme","setCurrentTheme","useThemeSwitcherStyles","FluentProvider","theme","Menu","MenuTrigger","MenuButton","menuButton","MenuPopover","MenuList","map","themeName","MenuItem","onClick","children","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"+JAAe,MAA0B,iC,wCCE1BA,cAAiB,CAC5BC,KAAM,CACFC,OAAQ,IACRC,WAAY,oJACZ,yBAA0B,cAC1B,0BAA2B,aAG/BC,KAAM,CACFD,WAAY,wE,QCTpB,6hK,OCuCeE,EAlCc,WAC3BC,IACA,IAAMC,EAAUC,IAChB,OACE,qBAAKC,UAAWF,EAAQG,IAAxB,SACE,yBAAQD,UAAWF,EAAQI,UAA3B,UACE,cAACC,EAAA,EAAD,CAAOC,IAAKC,EAAML,UAAWM,YAAaR,EAAQS,QAAST,EAAQU,aAAcC,IAAI,SACrF,sCACO,+CADP,0BAGA,cAACC,EAAA,EAAD,CACEV,UAAWF,EAAQa,cACnBC,GAAG,IACHC,KAAK,sBACLC,OAAO,SACPC,IAAI,sBACJC,WAAW,UAAUC,KAAK,QAN5B,yBASA,uBACA,cAACC,EAAA,EAAD,CACElB,UAAWF,EAAQqB,QACnBN,KAAK,oCACLC,OAAO,SACPC,IAAI,sBAJN,2BAQA,6BCrBOK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gHCPd,kOCKMQ,EAAyB,CAC3B,WAAYC,IACZ,aAAcC,IACd,YAAaC,IACb,cAAeC,IACf,oBAAqBC,IACrB,sBAAuBC,KAGdC,EAA0B,SAACC,GAAW,IAAD,EACRC,mBAASC,OAAOC,KAAKX,GAAQ,IADrB,mBACzCY,EADyC,KAC3BC,EAD2B,KAExC5C,EAAU6C,IAChB,OACI,eAACC,EAAA,EAAD,CAAgBC,MAAOhB,EAAOY,GAA9B,UACI,eAACK,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYhD,UAAWF,EAAQmD,WAA/B,SAA4CR,MAEhD,cAACS,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACKZ,OAAOC,KAAKX,GAAQuB,KAAI,SAACC,GAAD,OAAe,cAACC,EAAA,EAAD,CAAUC,QAAS,kBAAMb,EAAgBW,IAAzC,SAAsDA,cAIzGhB,EAAMmB,aCxBnBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BzC,EAAgB0C,QAAQC,O","file":"static/js/main.141f1339.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { makeStaticStyles } from '@fluentui/react-components';\n\nexport default makeStaticStyles({\n    body: {\n        margin: '0',\n        fontFamily: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n        '-webkit-font-smoothing': 'antialiased',\n        '-moz-osx-font-smoothing': 'grayscale'\n    },\n\n    code: {\n        fontFamily: \"source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace\",\n    }\n});","import { makeStyles } from '@fluentui/react-components';\n\nexport default makeStyles({\n    app: {\n        textAlign: 'center',\n    },\n    appLogo: {        \n        height: '40vmin',\n        pointerEvents: 'none',\n    },\n    appLogoSpin: {\n        '@media (prefers-reduced-motion: no-preference)': {\n            animationIterationCount: 'infinite',\n            animationDuration: '20s',\n            animationTimingFunction: 'linear',\n            animationName: {\n                from: {\n                    transform: 'rotate(0deg)'\n                },\n                to: {\n                    transform: 'rotate(360deg)'\n                },\n            },            \n        },\n        '@media screen and (prefers-reduced-motion: no-preference) and (max-width: 992px)': {\n            animationIterationCount: 'infinite',\n            animationDuration: '4s',\n            animationTimingFunction: 'linear',\n            animationName: {\n                from: {\n                    transform: 'rotate(360deg)'\n                },\n                to: {\n                    transform: 'rotate(0deg)'\n                },\n            },\n        }\n    },\n    appHeader: theme => ({\n        backgroundColor: theme.colorNeutralBackground1,\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: 'calc(10px + 2vmin)',\n        color: theme.colorNeutralForeground1,\n    }),\n    appLinkButton: {\n        textDecoration: 'none'\n    },\n    appLink: theme => ({        \n        borderBottomColor: theme.colorNeutralForeground3,\n        color: theme.colorNeutralForeground3,\n        ':active': { borderBottomColor: theme.colorNeutralForeground2BrandPressed,  color: theme.colorNeutralForeground2BrandPressed },\n        ':hover': { borderBottomColor: theme.colorNeutralForeground2BrandHover, color: theme.colorNeutralForeground2BrandHover },\n    }),\n});","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport { Button, Image, Link, MenuButton, Menu, MenuTrigger, MenuList, MenuItem, MenuPopover, MenuProps, MenuOpenEvents, MenuOpenChangeData } from '@fluentui/react-components';\nimport { mergeClasses, Theme, teamsLightTheme, teamsDarkTheme, teamsHighContrastTheme, webLightTheme, webDarkTheme, webHighContrastTheme } from '@fluentui/react-components';\nimport useStaticStyles from './index.styles';\nimport useAppStyles from './App.styles';\n\nexport const App: React.FC = () => {\n  useStaticStyles();\n  const classes = useAppStyles();\n  return (\n    <div className={classes.app}>\n      <header className={classes.appHeader}>        \n        <Image src={logo} className={mergeClasses(classes.appLogo, classes.appLogoSpin)} alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <Button\n          className={classes.appLinkButton}\n          as=\"a\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          appearance=\"primary\" size=\"large\">\n          Learn React\n        </Button>\n        <br />\n        <Link\n          className={classes.appLink}\n          href=\"https://aka.ms/fluentui-storybook\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Become Fluent\n        </Link>\n        <br />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { makeStyles } from '@fluentui/react-components';\n\nexport default makeStyles({\n    menuButton: {\n        position: 'sticky',        \n        top: '15px',\n        left: '15px',\n    },\n});","import App from './App';\nimport { FluentProvider, webLightTheme, webDarkTheme, teamsLightTheme, teamsDarkTheme, Theme, teamsHighContrastTheme, webHighContrastTheme, Menu, MenuTrigger, MenuButton, MenuPopover, MenuList, MenuItem } from '@fluentui/react-components';\nimport { Children, useState } from 'react';\nimport useThemeSwitcherStyles from './ThemeSwitcher.styles';\n\nexport type ThemeSelection = Record<string, Theme>;\n\nconst themes: ThemeSelection = {\n    \"Web Dark\": webDarkTheme,\n    \"Teams Dark\": teamsDarkTheme,\n    \"Web Light\": webLightTheme,\n    \"Teams Light\": teamsLightTheme,\n    \"Web High Contrast\": webHighContrastTheme,\n    \"Teams High Contrast\": teamsHighContrastTheme,\n};\n\nexport const ThemeSwitcher: React.FC = (props) => {\n    let [currentTheme, setCurrentTheme] = useState(Object.keys(themes)[0]);\n    const classes = useThemeSwitcherStyles();\n    return (\n        <FluentProvider theme={themes[currentTheme]}>            \n            <Menu>\n                <MenuTrigger>\n                    <MenuButton className={classes.menuButton}>{currentTheme}</MenuButton>\n                </MenuTrigger>\n                <MenuPopover>\n                    <MenuList >\n                        {Object.keys(themes).map((themeName) => <MenuItem onClick={() => setCurrentTheme(themeName)}>{themeName}</MenuItem>)}\n                    </MenuList>\n                </MenuPopover>\n            </Menu>\n            {props.children}\n        </FluentProvider>)\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { FluentProvider, webLightTheme, webDarkTheme, teamsLightTheme, teamsDarkTheme, Theme, teamsHighContrastTheme, webHighContrastTheme } from '@fluentui/react-components';\nimport { ThemeSwitcher } from './ThemeSwitcher'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeSwitcher>\n      <App />\n    </ThemeSwitcher>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}